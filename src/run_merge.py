import os
import shutil
import uuid
import socket  # Th√™m th∆∞ vi·ªán socket ƒë·ªÉ l·∫•y ƒë·ªãa ch·ªâ IP
from flask import Flask, request, send_file, jsonify, render_template
from werkzeug.utils import secure_filename

# Quan tr·ªçng: Import h√†m x·ª≠ l√Ω t·ª´ file c·ªßa b·∫°n
try:
    from GiangVideo import combine_audio_overlay_all_pairs
except ImportError:
    print(
        "L·ªñI: Kh√¥ng t√¨m th·∫•y t·ªáp 'GiangVideo.py' ho·∫∑c h√†m 'combine_audio_overlay_all_pairs'."
    )
    print("H√£y ƒë·∫£m b·∫£o t·ªáp 'GiangVideo.py' ·ªü c√πng th∆∞ m·ª•c v·ªõi 'run_merge.py'.")
    exit()

# Kh·ªüi t·∫°o ·ª©ng d·ª•ng Flask
app = Flask(__name__, template_folder=".")

# C·∫•u h√¨nh th∆∞ m·ª•c t·∫°m ƒë·ªÉ l∆∞u file upload v√† output
# S·ª≠ d·ª•ng th∆∞ m·ª•c 'temp' trong th∆∞ m·ª•c hi·ªán t·∫°i
BASE_TEMP_DIR = os.path.join(os.getcwd(), "temp_processing_files")
os.makedirs(BASE_TEMP_DIR, exist_ok=True)


@app.route("/")
def index():
    """
    H√†m n√†y ph·ª•c v·ª• file index.html cho giao di·ªán ng∆∞·ªùi d√πng.
    """
    try:
        return render_template("index.html")
    except Exception as e:
        return (
            f"L·ªói: Kh√¥ng t√¨m th·∫•y file index.html. H√£y ch·∫Øc ch·∫Øn n√≥ ·ªü c√πng th∆∞ m·ª•c. Chi ti·∫øt: {e}",
            404,
        )


@app.route("/process", methods=["POST"])
def process_videos():
    """
    H√†m n√†y x·ª≠ l√Ω vi·ªác upload file, g·ªçi h√†m gh√©p video, n√©n v√† tr·∫£ v·ªÅ k·∫øt qu·∫£.
    """
    # T·∫°o m·ªôt th∆∞ m·ª•c phi√™n duy nh·∫•t ƒë·ªÉ x·ª≠ l√Ω c√°c y√™u c·∫ßu ƒë·ªìng th·ªùi
    session_id = str(uuid.uuid4())
    session_dir = os.path.join(BASE_TEMP_DIR, session_id)

    video_dir = os.path.join(session_dir, "videos")
    audio_dir = os.path.join(session_dir, "audios")
    output_dir = os.path.join(session_dir, "output")

    zip_path = None  # Kh·ªüi t·∫°o bi·∫øn zip_path
    try:
        # T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt
        os.makedirs(video_dir, exist_ok=True)
        os.makedirs(audio_dir, exist_ok=True)
        os.makedirs(output_dir, exist_ok=True)

        # L·∫•y danh s√°ch file t·ª´ request
        video_files = request.files.getlist("videos")
        audio_files = request.files.getlist("audios")

        if not video_files or not audio_files:
            return jsonify({"error": "Vui l√≤ng cung c·∫•p c·∫£ t·ªáp video v√† audio."}), 400

        # L∆∞u c√°c t·ªáp video ƒë√£ t·∫£i l√™n
        for file in video_files:
            # S·ª¨A L·ªñI: Ki·ªÉm tra xem file v√† file.filename c√≥ t·ªìn t·∫°i kh√¥ng
            if file and file.filename:
                filename = secure_filename(file.filename)
                file.save(os.path.join(video_dir, filename))

        # L∆∞u c√°c t·ªáp audio ƒë√£ t·∫£i l√™n
        for file in audio_files:
            # S·ª¨A L·ªñI: Ki·ªÉm tra xem file v√† file.filename c√≥ t·ªìn t·∫°i kh√¥ng
            if file and file.filename:
                filename = secure_filename(file.filename)
                file.save(os.path.join(audio_dir, filename))

        # L·∫•y t√πy ch·ªçn x√≥a audio g·ªëc (gi√° tr·ªã l√† 'true' ho·∫∑c 'false' t·ª´ JS)
        remove_original_audio = request.form.get("remove_original_audio") == "true"

        print(f"‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu x·ª≠ l√Ω cho phi√™n {session_id}...")
        print(f"   - Th∆∞ m·ª•c video: {video_dir}")
        print(f"   - Th∆∞ m·ª•c audio: {audio_dir}")
        print(f"   - Th∆∞ m·ª•c output: {output_dir}")
        print(f"   - X√≥a audio g·ªëc: {remove_original_audio}")

        # G·ªçi h√†m x·ª≠ l√Ω ch√≠nh t·ª´ file GiangVideo.py
        combine_audio_overlay_all_pairs(
            video_folder=video_dir,
            audio_folder=audio_dir,
            output_folder=output_dir,
            remove_original_audio=remove_original_audio,
        )

        print(f"‚úÖ X·ª≠ l√Ω ho√†n t·∫•t cho phi√™n {session_id}.")

        # Ki·ªÉm tra xem c√≥ file n√†o ƒë∆∞·ª£c t·∫°o ra kh√¥ng
        if not os.listdir(output_dir):
            print(f"‚ö†Ô∏è Kh√¥ng c√≥ file n√†o ƒë∆∞·ª£c t·∫°o ra trong th∆∞ m·ª•c output.")
            return (
                jsonify(
                    {
                        "error": "X·ª≠ l√Ω ho√†n t·∫•t nh∆∞ng kh√¥ng c√≥ video n√†o ƒë∆∞·ª£c t·∫°o ra. Vui l√≤ng ki·ªÉm tra log c·ªßa server."
                    }
                ),
                500,
            )

        # N√©n th∆∞ m·ª•c output th√†nh file zip
        zip_filename = f"processed_{session_id}"
        zip_path_without_ext = os.path.join(BASE_TEMP_DIR, zip_filename)
        zip_path = shutil.make_archive(zip_path_without_ext, "zip", output_dir)

        print(f"üì¶ ƒê√£ n√©n k·∫øt qu·∫£ v√†o: {zip_path}")

        # Tr·∫£ file zip v·ªÅ cho ng∆∞·ªùi d√πng
        return send_file(
            zip_path, as_attachment=True, download_name="processed_videos.zip"
        )

    except Exception as e:
        print(f"‚ùå ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω: {e}")
        import traceback

        traceback.print_exc()
        return jsonify({"error": str(e)}), 500
    finally:
        # D·ªçn d·∫πp: X√≥a th∆∞ m·ª•c c·ªßa phi√™n l√†m vi·ªác sau khi ƒë√£ ho√†n t·∫•t
        try:
            if os.path.exists(session_dir):
                shutil.rmtree(session_dir)
                print(f"üßπ ƒê√£ d·ªçn d·∫πp th∆∞ m·ª•c t·∫°m: {session_dir}")
        except Exception as cleanup_error:
            print(
                f"‚ö†Ô∏è L·ªói trong qu√° tr√¨nh d·ªçn d·∫πp th∆∞ m·ª•c {session_dir}: {cleanup_error}"
            )
            print(
                "   (ƒêi·ªÅu n√†y c√≥ th·ªÉ x·∫£y ra tr√™n Windows n·∫øu file ƒëang b·ªã kh√≥a. Th∆∞ m·ª•c s·∫Ω ƒë∆∞·ª£c x√≥a sau.)"
            )

        # X√≥a file zip n·∫øu c√≥
        try:
            if zip_path and os.path.exists(zip_path):
                os.remove(zip_path)
                print(f"üßπ ƒê√£ d·ªçn d·∫πp t·ªáp zip: {zip_path}")
        except Exception as cleanup_error:
            print(f"‚ö†Ô∏è L·ªói trong qu√° tr√¨nh d·ªçn d·∫πp t·ªáp zip {zip_path}: {cleanup_error}")


if __name__ == "__main__":

    def get_local_ip():
        """H√†m n√†y t√¨m ƒë·ªãa ch·ªâ IP c·ª•c b·ªô c·ªßa m√°y."""
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        try:
            # Kh√¥ng c·∫ßn ph·∫£i k·∫øt n·ªëi ƒë∆∞·ª£c, ch·ªâ c·∫ßn th·ª≠ ƒë·ªÉ l·∫•y IP
            s.connect(("10.255.255.255", 1))
            IP = s.getsockname()[0]
        except Exception:
            IP = "127.0.0.1"  # Tr·∫£ v·ªÅ IP m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng t√¨m th·∫•y
        finally:
            s.close()
        return IP

    local_ip = get_local_ip()
    port = 5000

    print("===================================================")
    print("          SERVER GH√âP VIDEO ƒêANG CH·∫†Y")
    print("===================================================")
    print(
        "1. ƒê·∫∑t c√°c t·ªáp 'run_merge.py', 'index.html', 'GiangVideo.py' v√†o c√πng m·ªôt th∆∞ m·ª•c."
    )
    print("2. M·ªü tr√¨nh duy·ªát v√† truy c·∫≠p:")
    print(f"   - Tr√™n m√°y n√†y: http://127.0.0.1:{port} ho·∫∑c http://localhost:{port}")
    print(f"   - Tr√™n m√°y kh√°c c√πng m·∫°ng Wi-Fi: http://{local_ip}:{port}")
    print("3. Nh·∫•n Ctrl+C trong c·ª≠a s·ªï terminal n√†y ƒë·ªÉ d·ª´ng server.")
    print("---------------------------------------------------")
    # Ch·∫°y server, host='0.0.0.0' ƒë·ªÉ c√≥ th·ªÉ truy c·∫≠p t·ª´ c√°c m√°y kh√°c trong m·∫°ng
    app.run(host="0.0.0.0", port=5000, debug=True)